name: Signed Releases

on:
  release:
    types: [ created ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@8c43807e82148a7bafc633cc9584d04bf54be8d0 # v3.1.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Debug
        uses: hmarr/debug-action@v2

      - name: Signs release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import-gpg.outputs.fingerprint }}"
          ZIPBALL_URL: ${{ github.event.release.zipball_url }}
          TARBALL_URL: ${{ github.event.release.tarball_url }}
          FILE_NAME: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}
          UPLOAD_URL: ${{ github.event.release.upload_url }}
        run: |
          UPLOAD_URL=$(echo $UPLOAD_URL | cut -d '{' -f1)

          curl -L "${ZIPBALL_URL}" --output "${FILE_NAME}.zip"
          curl -L "${TARBALL_URL}" --output "${FILE_NAME}.tar.gz"

          gpg --batch -u ${GPG_FINGERPRINT} --output "${FILE_NAME}.zip.sig" --detach-sign "${FILE_NAME}.zip"
          gpg --batch -u ${GPG_FINGERPRINT} --output "${FILE_NAME}.tar.gz.sig" --detach-sign "${FILE_NAME}.tar.gz"

          curl "${UPLOAD_URL}?name=$(basename "${FILE_NAME}.zip.asc")" \
            -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: $(file -b --mime-type "${FILE_NAME}.zip.asc")" \
            --data-binary @"${FILE_NAME}.zip.asc"

          curl "${UPLOAD_URL}?name=$(basename "${FILE_NAME}.tar.gz.asc")" \
            -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: $(file -b --mime-type "${FILE_NAME}.tar.gz.asc")" \
            --data-binary @"${FILE_NAME}.tar.gz.asc"
